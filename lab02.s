.data

array: .word 1, 0, 1, 12, 0, 1, 4  # Ο πίνακας με τα δεδομένα

.text

    la a0, array            # Φόρτωση της διεύθυνσης του πίνακα στον καταχωρητή a0
    li a1, 7                # Ο αριθμός των στοιχείων του πίνακα (7)
    li a2, 1                # Ο αριθμός που ψάχνουμε (1)

findLast_backwards_withPointers:
    beq  a1, zero, not_found  # Αν a1 (πλήθος στοιχείων) == 0, πήγαινε στη διεύθυνση not_found
    slli s0, a1, 2            # Υπολογισμός του offset από το πλήθος στοιχείων (a1 * 4)
    add  s0, s0, a0           # Υπολογισμός της διεύθυνσης του τελευταίου στοιχείου (a0 + offset)

loop:
    addi s0, s0, -4           # Μείωση της διεύθυνσης κατά 4 bytes (προχωράμε προς τα πίσω)
    lw   t1, 0(s0)            # Φόρτωση της τιμής του πίνακα από τη διεύθυνση s0 στον t1
    beq  t1, a2, found        # Αν η τιμή t1 == a2 (βρήκαμε το στοιχείο), πήγαινε στη διεύθυνση found
    bne  s0, a0, loop         # Αν η τρέχουσα διεύθυνση s0 != a0 (δεν φτάσαμε στην αρχή του πίνακα), επανάλαβε τη βρόχο

not_found:
    add  s0, zero, zero       # Επιστροφή διεύθυνσης 0 (δεν βρέθηκε το στοιχείο)

found:
    addi a7, zero, 10         # Κωδικός για έξοδο
    ecall                      # Κλήση συστήματος για έξοδο
